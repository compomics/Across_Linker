package com.compomics.searchgui_xl.view;

import com.compomics.searchgui_xl.model.PropertyConfig;
import com.compomics.searchgui_xl.controller.AdvancedSettingsFrameController;
import javax.swing.JOptionPane;

/**
 *
 * @author Genet
 */
public class AdvancedSettingsFrame extends javax.swing.JFrame {

    AdvancedSettingsFrameController controller;

    /**
     * Creates new form NewJFrame
     *
     * @param cntrl object to controller class of this frame
     */
    public AdvancedSettingsFrame(AdvancedSettingsFrameController cntrl) {
        initComponents();
        this.controller = cntrl;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAdvancedSettings = new javax.swing.JPanel();
        pnlInputDataDescription = new javax.swing.JPanel();
        lblInstrument = new javax.swing.JLabel();
        cmbInstrument = new javax.swing.JComboBox<>();
        lblMS1Resolution = new javax.swing.JLabel();
        lblMS2Resolution = new javax.swing.JLabel();
        txtMS1Resolution = new javax.swing.JTextField();
        chkMS1Centroid = new javax.swing.JCheckBox();
        txtMS2Resolution = new javax.swing.JTextField();
        chkMS2Centroid = new javax.swing.JCheckBox();
        lblEnrichment = new javax.swing.JLabel();
        sldrEnrichment = new javax.swing.JSlider();
        cmbFragmentMode = new javax.swing.JComboBox<>();
        lblFragmentMode = new javax.swing.JLabel();
        lblEnzyme = new javax.swing.JLabel();
        cmbEnzyme = new javax.swing.JComboBox<>();
        txtEnrichment = new javax.swing.JTextField();
        lblmaxMissCleabage = new javax.swing.JLabel();
        txtMaxMissCleabage = new javax.swing.JTextField();
        pnlSearchParameters = new javax.swing.JPanel();
        lblFragBinOffset = new javax.swing.JLabel();
        txtFragBinOffset = new javax.swing.JTextField();
        sldrFragBinOffset = new javax.swing.JSlider();
        lblFragBinOSizeUnit = new javax.swing.JLabel();
        txtFragBinSize = new javax.swing.JTextField();
        lblFragBinSize = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        chkFragIonB = new javax.swing.JCheckBox();
        chkFragIonA = new javax.swing.JCheckBox();
        chkFragIonX = new javax.swing.JCheckBox();
        chkFragIonC = new javax.swing.JCheckBox();
        chkFragIonZ = new javax.swing.JCheckBox();
        chkFragIonY = new javax.swing.JCheckBox();
        lblNeutralLoss = new javax.swing.JLabel();
        cmbNeutralLoss = new javax.swing.JComboBox<>();
        lblPrecTolerance = new javax.swing.JLabel();
        txtPrecTolerance = new javax.swing.JTextField();
        cmbPrecTolerance = new javax.swing.JComboBox<>();
        lblFragTolerance = new javax.swing.JLabel();
        txtFragTolerance = new javax.swing.JTextField();
        cmbFragTolerance = new javax.swing.JComboBox<>();
        lblMaxPepMass = new javax.swing.JLabel();
        txtMaxPepMass = new javax.swing.JTextField();
        lblMinPepMass = new javax.swing.JLabel();
        txtMinPepMass = new javax.swing.JTextField();
        lblmaxpepmassUnit = new javax.swing.JLabel();
        lblminpepmassUnit = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        lblPercolatorVersion = new javax.swing.JLabel();
        txtPercolatorVersion = new javax.swing.JTextField();
        chkPercolator = new javax.swing.JCheckBox();
        lblFDR = new javax.swing.JLabel();
        txtFDR = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        lblIsotopPeakOffset = new javax.swing.JLabel();
        cmbisotopError = new javax.swing.JComboBox<>();
        chkTurboButton = new javax.swing.JCheckBox();
        pnlPreprocessing = new javax.swing.JPanel();
        lblMassWindow = new javax.swing.JLabel();
        txtMassWindow = new javax.swing.JTextField();
        lblMinFilteredPeaks = new javax.swing.JLabel();
        txtMinFilteredPeaks = new javax.swing.JTextField();
        lblMaxFilteredPeaks = new javax.swing.JLabel();
        txtMaxFilteredPeaks = new javax.swing.JTextField();
        lblMinPrecMassIsotop = new javax.swing.JLabel();
        txtMinPrecMassIsotop = new javax.swing.JTextField();
        lblDeisotopicPrecision = new javax.swing.JLabel();
        txtDeisotopicPrecision = new javax.swing.JTextField();
        lblDeconvulatePrecision = new javax.swing.JLabel();
        txtDeconvulatePrecision = new javax.swing.JTextField();
        pnlLinkInformation = new javax.swing.JPanel();
        jPanel10 = new javax.swing.JPanel();
        chkMonoLink = new javax.swing.JCheckBox();
        chkInterLink = new javax.swing.JCheckBox();
        chkIntraLink = new javax.swing.JCheckBox();
        jPanel11 = new javax.swing.JPanel();
        chkSideReactionS = new javax.swing.JCheckBox();
        chkSideReactionY = new javax.swing.JCheckBox();
        chkSideReactionT = new javax.swing.JCheckBox();
        lblMaxPepLength = new javax.swing.JLabel();
        txtMaxPepLength = new javax.swing.JTextField();
        lblMinPepLength = new javax.swing.JLabel();
        txtMinPepLength = new javax.swing.JTextField();
        chkIsLabeled = new javax.swing.JCheckBox();
        jPanel14 = new javax.swing.JPanel();
        pnlFixedModifications = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtFixedModifications = new javax.swing.JTextArea();
        pnlVariableModifications = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtVariableModifications = new javax.swing.JTextArea();
        pnlListOfModifications = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtListofModifications = new javax.swing.JTextArea();
        btnSetFixedModification = new javax.swing.JButton();
        btnDeleteFixedModification = new javax.swing.JButton();
        btnSetVariableModification = new javax.swing.JButton();
        btnDeleteVariableModification = new javax.swing.JButton();
        btnDefaultSettings = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pnlInputDataDescription.setBorder(javax.swing.BorderFactory.createTitledBorder("Input data description"));

        lblInstrument.setText("Instrument");

        cmbInstrument.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Orbitrap", "FTICR" }));
        cmbInstrument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbInstrumentActionPerformed(evt);
            }
        });

        lblMS1Resolution.setText("MS1 Resolution");

        lblMS2Resolution.setText("MS2  Resolution");

        txtMS1Resolution.setText("100000   ");
        txtMS1Resolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMS1ResolutionActionPerformed(evt);
            }
        });

        chkMS1Centroid.setText("MS1 Centroid");
        chkMS1Centroid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMS1CentroidActionPerformed(evt);
            }
        });

        txtMS2Resolution.setText("7500");
        txtMS2Resolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMS2ResolutionActionPerformed(evt);
            }
        });

        chkMS2Centroid.setText("MS2 Centroid");
        chkMS2Centroid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMS2CentroidActionPerformed(evt);
            }
        });

        lblEnrichment.setText("Enrichment");

        sldrEnrichment.setMaximum(10);
        sldrEnrichment.setPaintTicks(true);
        sldrEnrichment.setValue(0);
        sldrEnrichment.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldrEnrichmentStateChanged(evt);
            }
        });

        cmbFragmentMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "HCD", "CID", "ETD" }));
        cmbFragmentMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFragmentModeActionPerformed(evt);
            }
        });

        lblFragmentMode.setText("Fragment mode");

        lblEnzyme.setText("Enzyme");

        cmbEnzyme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Trypsine", "Others(non tryptic)" }));
        cmbEnzyme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbEnzymeActionPerformed(evt);
            }
        });

        txtEnrichment.setEditable(false);
        txtEnrichment.setText("0.4");

        lblmaxMissCleabage.setText("Max Missed Cleavage");

        txtMaxMissCleabage.setText("4");
        txtMaxMissCleabage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxMissCleabageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlInputDataDescriptionLayout = new javax.swing.GroupLayout(pnlInputDataDescription);
        pnlInputDataDescription.setLayout(pnlInputDataDescriptionLayout);
        pnlInputDataDescriptionLayout.setHorizontalGroup(
            pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                        .addComponent(lblFragmentMode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbFragmentMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                        .addComponent(lblEnrichment)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sldrEnrichment, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEnrichment, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                        .addComponent(lblInstrument)
                        .addGap(18, 18, 18)
                        .addComponent(cmbInstrument, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkMS2Centroid)
                    .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                        .addComponent(lblMS1Resolution)
                        .addGap(18, 18, 18)
                        .addComponent(txtMS1Resolution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                        .addComponent(lblMS2Resolution)
                        .addGap(18, 18, 18)
                        .addComponent(txtMS2Resolution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkMS1Centroid)))
            .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                        .addComponent(lblmaxMissCleabage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtMaxMissCleabage, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                        .addComponent(lblEnzyme)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbEnzyme, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlInputDataDescriptionLayout.setVerticalGroup(
            pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInputDataDescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblInstrument)
                    .addComponent(cmbInstrument, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFragmentMode)
                    .addComponent(cmbFragmentMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMS1Resolution)
                    .addComponent(txtMS1Resolution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMS2Resolution)
                    .addComponent(txtMS2Resolution, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEnrichment)
                    .addComponent(sldrEnrichment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEnrichment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkMS1Centroid)
                .addGap(18, 18, 18)
                .addComponent(chkMS2Centroid)
                .addGap(16, 16, 16)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblmaxMissCleabage)
                    .addComponent(txtMaxMissCleabage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInputDataDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbEnzyme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEnzyme))
                .addGap(59, 59, 59))
        );

        pnlSearchParameters.setBorder(javax.swing.BorderFactory.createTitledBorder("Score parameters"));

        lblFragBinOffset.setText("frag. bin offset");

        txtFragBinOffset.setText("0.4");

        sldrFragBinOffset.setMaximum(10);
        sldrFragBinOffset.setPaintTicks(true);
        sldrFragBinOffset.setValue(4);
        sldrFragBinOffset.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldrFragBinOffsetStateChanged(evt);
            }
        });

        lblFragBinOSizeUnit.setText("Da.");

        txtFragBinSize.setText("1.0005  ");
        txtFragBinSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFragBinSizeActionPerformed(evt);
            }
        });

        lblFragBinSize.setText("frag. bin size");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Fragment ions"));

        chkFragIonB.setText("B");
        chkFragIonB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFragIonBActionPerformed(evt);
            }
        });

        chkFragIonA.setText("A");
        chkFragIonA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFragIonAActionPerformed(evt);
            }
        });

        chkFragIonX.setText("X");
        chkFragIonX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFragIonXActionPerformed(evt);
            }
        });

        chkFragIonC.setText("C");
        chkFragIonC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFragIonCActionPerformed(evt);
            }
        });

        chkFragIonZ.setText("Z");
        chkFragIonZ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFragIonZActionPerformed(evt);
            }
        });

        chkFragIonY.setText("Y");
        chkFragIonY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFragIonYActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkFragIonA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkFragIonB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(chkFragIonC)
                .addGap(10, 10, 10)
                .addComponent(chkFragIonX)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkFragIonY)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkFragIonZ)
                .addGap(66, 66, 66))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkFragIonB)
                    .addComponent(chkFragIonX)
                    .addComponent(chkFragIonC)
                    .addComponent(chkFragIonZ)
                    .addComponent(chkFragIonY)
                    .addComponent(chkFragIonA))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblNeutralLoss.setText("Neutral loss");

        cmbNeutralLoss.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No neutral loss", "Water losses for D/E/S/T ", "All water losses" }));
        cmbNeutralLoss.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNeutralLossActionPerformed(evt);
            }
        });

        lblPrecTolerance.setText("Prec. Tolerance");

        txtPrecTolerance.setText("10");
        txtPrecTolerance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecToleranceActionPerformed(evt);
            }
        });

        cmbPrecTolerance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PPM", "Da." }));
        cmbPrecTolerance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPrecToleranceActionPerformed(evt);
            }
        });

        lblFragTolerance.setText("frag. Tolerance");

        txtFragTolerance.setText("0.05");
        txtFragTolerance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFragToleranceActionPerformed(evt);
            }
        });

        cmbFragTolerance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PPM", "Da." }));
        cmbFragTolerance.setSelectedIndex(1);
        cmbFragTolerance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFragToleranceActionPerformed(evt);
            }
        });

        lblMaxPepMass.setText("Max peptide mass");

        txtMaxPepMass.setText("7000");
        txtMaxPepMass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxPepMassActionPerformed(evt);
            }
        });

        lblMinPepMass.setText("Min peptide mass");

        txtMinPepMass.setText("400");
        txtMinPepMass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinPepMassActionPerformed(evt);
            }
        });

        lblmaxpepmassUnit.setText("Da.");

        lblminpepmassUnit.setText("Da.");

        javax.swing.GroupLayout pnlSearchParametersLayout = new javax.swing.GroupLayout(pnlSearchParameters);
        pnlSearchParameters.setLayout(pnlSearchParametersLayout);
        pnlSearchParametersLayout.setHorizontalGroup(
            pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addComponent(lblFragBinOffset)
                        .addGap(18, 18, 18)
                        .addComponent(sldrFragBinOffset, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFragBinOffset, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addComponent(lblFragTolerance)
                        .addGap(18, 18, 18)
                        .addComponent(txtFragTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(cmbFragTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addComponent(lblMinPepMass)
                        .addGap(18, 18, 18)
                        .addComponent(txtMinPepMass, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblminpepmassUnit))
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addComponent(lblMaxPepMass)
                        .addGap(10, 10, 10)
                        .addComponent(txtMaxPepMass, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblmaxpepmassUnit))
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addComponent(lblPrecTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(txtPrecTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPrecTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblFragBinSize, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNeutralLoss))
                        .addGap(18, 18, 18)
                        .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbNeutralLoss, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                                .addComponent(txtFragBinSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblFragBinOSizeUnit)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        pnlSearchParametersLayout.setVerticalGroup(
            pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSearchParametersLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFragBinOffset)
                    .addComponent(txtFragBinOffset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sldrFragBinOffset, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFragBinSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFragBinSize)
                    .addComponent(lblFragBinOSizeUnit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNeutralLoss)
                    .addComponent(cmbNeutralLoss, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblPrecTolerance))
                    .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPrecTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbPrecTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblFragTolerance))
                    .addComponent(txtFragTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbFragTolerance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMaxPepMass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblmaxpepmassUnit))
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblMaxPepMass)))
                .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlSearchParametersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMinPepMass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblminpepmassUnit))
                    .addGroup(pnlSearchParametersLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblMinPepMass)))
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Validation"));

        lblPercolatorVersion.setText("Percolator version");

        txtPercolatorVersion.setText("3.0");
        txtPercolatorVersion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPercolatorVersionActionPerformed(evt);
            }
        });

        chkPercolator.setText("Use percolator");
        chkPercolator.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPercolatorActionPerformed(evt);
            }
        });

        lblFDR.setText("FDR");

        txtFDR.setText("0.05");
        txtFDR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFDRActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblFDR)
                        .addGap(32, 32, 32)
                        .addComponent(txtFDR, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkPercolator)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(lblPercolatorVersion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPercolatorVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(chkPercolator)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPercolatorVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPercolatorVersion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtFDR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFDR)))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Additional"));

        lblIsotopPeakOffset.setText("Isotop error");

        cmbisotopError.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2" }));
        cmbisotopError.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbisotopErrorActionPerformed(evt);
            }
        });

        chkTurboButton.setText("Turbo button");
        chkTurboButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkTurboButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(lblIsotopPeakOffset)
                        .addGap(16, 16, 16)
                        .addComponent(cmbisotopError, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(chkTurboButton))
                .addGap(0, 114, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIsotopPeakOffset)
                    .addComponent(cmbisotopError, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(chkTurboButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPreprocessing.setBorder(javax.swing.BorderFactory.createTitledBorder("Preprocessing"));

        lblMassWindow.setText("Mass window");

        txtMassWindow.setText("10");
        txtMassWindow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMassWindowActionPerformed(evt);
            }
        });

        lblMinFilteredPeaks.setText("Min. Filtered peaks");

        txtMinFilteredPeaks.setText("1");
        txtMinFilteredPeaks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinFilteredPeaksActionPerformed(evt);
            }
        });

        lblMaxFilteredPeaks.setText("Max. Filtered peaks");

        txtMaxFilteredPeaks.setText("10");
        txtMaxFilteredPeaks.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxFilteredPeaksActionPerformed(evt);
            }
        });

        lblMinPrecMassIsotop.setText("Min. PrecMassIsotopicPeakSelected");

        txtMinPrecMassIsotop.setText("1800");
        txtMinPrecMassIsotop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinPrecMassIsotopActionPerformed(evt);
            }
        });

        lblDeisotopicPrecision.setText("DeIsotopic Precision");

        txtDeisotopicPrecision.setText("0.001");
        txtDeisotopicPrecision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeisotopicPrecisionActionPerformed(evt);
            }
        });

        lblDeconvulatePrecision.setText("Deconvulate Precision");

        txtDeconvulatePrecision.setText("0.003");
        txtDeconvulatePrecision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDeconvulatePrecisionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPreprocessingLayout = new javax.swing.GroupLayout(pnlPreprocessing);
        pnlPreprocessing.setLayout(pnlPreprocessingLayout);
        pnlPreprocessingLayout.setHorizontalGroup(
            pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addComponent(lblDeisotopicPrecision)
                .addGap(18, 18, 18)
                .addComponent(txtDeisotopicPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMassWindow)
                    .addComponent(lblMaxFilteredPeaks)
                    .addComponent(lblMinFilteredPeaks))
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtMinFilteredPeaks, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMassWindow, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(txtMaxFilteredPeaks, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                        .addComponent(lblDeconvulatePrecision)
                        .addGap(18, 18, 18)
                        .addComponent(txtDeconvulatePrecision))
                    .addComponent(lblMinPrecMassIsotop))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtMinPrecMassIsotop, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlPreprocessingLayout.setVerticalGroup(
            pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreprocessingLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMassWindow)
                    .addComponent(txtMassWindow, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMinFilteredPeaks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMinFilteredPeaks))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxFilteredPeaks)
                    .addComponent(txtMaxFilteredPeaks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinPrecMassIsotop)
                    .addComponent(txtMinPrecMassIsotop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeisotopicPrecision)
                    .addComponent(txtDeisotopicPrecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlPreprocessingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDeconvulatePrecision)
                    .addComponent(txtDeconvulatePrecision, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pnlLinkInformation.setBorder(javax.swing.BorderFactory.createTitledBorder("Link Information"));

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Link to search"));

        chkMonoLink.setText("Mono");
        chkMonoLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMonoLinkActionPerformed(evt);
            }
        });

        chkInterLink.setText("Inter");
        chkInterLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkInterLinkActionPerformed(evt);
            }
        });

        chkIntraLink.setText("Intra");
        chkIntraLink.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIntraLinkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(chkMonoLink)
                .addGap(18, 18, 18)
                .addComponent(chkIntraLink)
                .addGap(18, 18, 18)
                .addComponent(chkInterLink))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkMonoLink)
                    .addComponent(chkInterLink)
                    .addComponent(chkIntraLink)))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Side reactions"));

        chkSideReactionS.setText("S");
        chkSideReactionS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSideReactionSActionPerformed(evt);
            }
        });

        chkSideReactionY.setText("Y");
        chkSideReactionY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSideReactionYActionPerformed(evt);
            }
        });

        chkSideReactionT.setText("T");
        chkSideReactionT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSideReactionTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addComponent(chkSideReactionS)
                .addGap(18, 18, 18)
                .addComponent(chkSideReactionT)
                .addGap(18, 18, 18)
                .addComponent(chkSideReactionY)
                .addGap(0, 12, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkSideReactionS)
                    .addComponent(chkSideReactionY)
                    .addComponent(chkSideReactionT)))
        );

        lblMaxPepLength.setText("Max. peptideLength allowed");

        txtMaxPepLength.setText("70");
        txtMaxPepLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaxPepLengthActionPerformed(evt);
            }
        });

        lblMinPepLength.setText("Min.peptideLength allowed");

        txtMinPepLength.setText("4");
        txtMinPepLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMinPepLengthActionPerformed(evt);
            }
        });

        chkIsLabeled.setText("Is Labeled");
        chkIsLabeled.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkIsLabeledActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlLinkInformationLayout = new javax.swing.GroupLayout(pnlLinkInformation);
        pnlLinkInformation.setLayout(pnlLinkInformationLayout);
        pnlLinkInformationLayout.setHorizontalGroup(
            pnlLinkInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLinkInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLinkInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLinkInformationLayout.createSequentialGroup()
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(24, Short.MAX_VALUE))
                    .addGroup(pnlLinkInformationLayout.createSequentialGroup()
                        .addGroup(pnlLinkInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlLinkInformationLayout.createSequentialGroup()
                                .addComponent(lblMinPepLength)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtMinPepLength, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlLinkInformationLayout.createSequentialGroup()
                                .addComponent(lblMaxPepLength)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtMaxPepLength, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chkIsLabeled))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        pnlLinkInformationLayout.setVerticalGroup(
            pnlLinkInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLinkInformationLayout.createSequentialGroup()
                .addComponent(chkIsLabeled)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 3, Short.MAX_VALUE)
                .addGroup(pnlLinkInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMaxPepLength)
                    .addComponent(txtMaxPepLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(pnlLinkInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMinPepLength)
                    .addComponent(txtMinPepLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Modifications"));

        pnlFixedModifications.setBorder(javax.swing.BorderFactory.createTitledBorder("Fixed Modifications"));

        txtFixedModifications.setColumns(20);
        txtFixedModifications.setRows(5);
        txtFixedModifications.setText("selected fixed modifications");
        jScrollPane1.setViewportView(txtFixedModifications);

        javax.swing.GroupLayout pnlFixedModificationsLayout = new javax.swing.GroupLayout(pnlFixedModifications);
        pnlFixedModifications.setLayout(pnlFixedModificationsLayout);
        pnlFixedModificationsLayout.setHorizontalGroup(
            pnlFixedModificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFixedModificationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlFixedModificationsLayout.setVerticalGroup(
            pnlFixedModificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFixedModificationsLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlVariableModifications.setBorder(javax.swing.BorderFactory.createTitledBorder("Variable Modifications"));

        txtVariableModifications.setColumns(20);
        txtVariableModifications.setRows(5);
        txtVariableModifications.setText("selected variable modifications");
        jScrollPane2.setViewportView(txtVariableModifications);

        javax.swing.GroupLayout pnlVariableModificationsLayout = new javax.swing.GroupLayout(pnlVariableModifications);
        pnlVariableModifications.setLayout(pnlVariableModificationsLayout);
        pnlVariableModificationsLayout.setHorizontalGroup(
            pnlVariableModificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlVariableModificationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        pnlVariableModificationsLayout.setVerticalGroup(
            pnlVariableModificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlVariableModificationsLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addContainerGap())
        );

        pnlListOfModifications.setBorder(javax.swing.BorderFactory.createTitledBorder("Common Modifications"));

        txtListofModifications.setColumns(20);
        txtListofModifications.setRows(5);
        txtListofModifications.setText("List of available modifications");
        jScrollPane3.setViewportView(txtListofModifications);

        javax.swing.GroupLayout pnlListOfModificationsLayout = new javax.swing.GroupLayout(pnlListOfModifications);
        pnlListOfModifications.setLayout(pnlListOfModificationsLayout);
        pnlListOfModificationsLayout.setHorizontalGroup(
            pnlListOfModificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListOfModificationsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlListOfModificationsLayout.setVerticalGroup(
            pnlListOfModificationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListOfModificationsLayout.createSequentialGroup()
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        btnSetFixedModification.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSetFixedModification.setText("<<");

        btnDeleteFixedModification.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeleteFixedModification.setText(">>");

        btnSetVariableModification.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnSetVariableModification.setText("<<");

        btnDeleteVariableModification.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnDeleteVariableModification.setText(">>");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlFixedModifications, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlVariableModifications, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSetFixedModification)
                    .addComponent(btnDeleteFixedModification)
                    .addComponent(btnSetVariableModification)
                    .addComponent(btnDeleteVariableModification))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlListOfModifications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlListOfModifications, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlFixedModifications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlVariableModifications, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(btnSetFixedModification)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteFixedModification)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSetVariableModification)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteVariableModification)
                .addGap(27, 27, 27))
        );

        btnDefaultSettings.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnDefaultSettings.setText("Set default");
        btnDefaultSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDefaultSettingsActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btnCancel.setText("Cancel");

        javax.swing.GroupLayout pnlAdvancedSettingsLayout = new javax.swing.GroupLayout(pnlAdvancedSettings);
        pnlAdvancedSettings.setLayout(pnlAdvancedSettingsLayout);
        pnlAdvancedSettingsLayout.setHorizontalGroup(
            pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdvancedSettingsLayout.createSequentialGroup()
                .addGroup(pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdvancedSettingsLayout.createSequentialGroup()
                        .addGap(386, 386, 386)
                        .addComponent(btnDefaultSettings)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnlAdvancedSettingsLayout.createSequentialGroup()
                        .addComponent(pnlInputDataDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlPreprocessing, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlSearchParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnlLinkInformation, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 1037, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlAdvancedSettingsLayout.setVerticalGroup(
            pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdvancedSettingsLayout.createSequentialGroup()
                .addGroup(pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pnlInputDataDescription, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGroup(pnlAdvancedSettingsLayout.createSequentialGroup()
                            .addComponent(pnlLinkInformation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlAdvancedSettingsLayout.createSequentialGroup()
                            .addComponent(pnlPreprocessing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlSearchParameters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlAdvancedSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDefaultSettings)
                    .addComponent(btnCancel)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1067, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlAdvancedSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 734, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(12, Short.MAX_VALUE)
                    .addComponent(pnlAdvancedSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(20, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkMS1CentroidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMS1CentroidActionPerformed
        
    }//GEN-LAST:event_chkMS1CentroidActionPerformed

    private void chkMS2CentroidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMS2CentroidActionPerformed
       
    }//GEN-LAST:event_chkMS2CentroidActionPerformed

    private void sldrFragBinOffsetStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldrFragBinOffsetStateChanged

        double fragBinOffset = sldrFragBinOffset.getValue() / 10.0;
        txtFragBinOffset.setText(Double.toString(fragBinOffset));


    }//GEN-LAST:event_sldrFragBinOffsetStateChanged

    private void chkPercolatorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPercolatorActionPerformed
        
    }//GEN-LAST:event_chkPercolatorActionPerformed

    private void chkIsLabeledActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIsLabeledActionPerformed
       
    }//GEN-LAST:event_chkIsLabeledActionPerformed

    private void cmbInstrumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbInstrumentActionPerformed
       
    }//GEN-LAST:event_cmbInstrumentActionPerformed

    private void sldrEnrichmentStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldrEnrichmentStateChanged
        double enrichment = sldrEnrichment.getValue() / 10.0;
        txtEnrichment.setText(Double.toString(enrichment));
    

    }//GEN-LAST:event_sldrEnrichmentStateChanged

    private void btnDefaultSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDefaultSettingsActionPerformed
        this.controller.loadDefaultSettings();
    }//GEN-LAST:event_btnDefaultSettingsActionPerformed

    private void cmbFragmentModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFragmentModeActionPerformed
        String fragmentMode = cmbFragmentMode.getSelectedItem().toString();
        PropertyConfig.getInstance().setProperty("fragment.mode", fragmentMode);
    }//GEN-LAST:event_cmbFragmentModeActionPerformed

    private void txtMS1ResolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMS1ResolutionActionPerformed

        int resolution = 0;
        boolean error = false;
        try {
            resolution = Integer.parseInt(txtMS1Resolution.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Invalid input: " + ex);
            error = true;

        }
        if (!error) {
            txtMS1Resolution.setText(PropertyConfig.getInstance().getProperty("MS1.resolution"));
        } else {
            PropertyConfig.getInstance().setProperty("MS1.resolution", Integer.toString(resolution) );
        }

    }//GEN-LAST:event_txtMS1ResolutionActionPerformed

    private void txtMS2ResolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMS2ResolutionActionPerformed
        int resolution = 0;
        boolean error = false;
        try {
            resolution = Integer.parseInt(txtMS2Resolution.getText());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Invalid input: " + ex);
            error = true;

        }
        if (!error) {
            txtMS2Resolution.setText(PropertyConfig.getInstance().getProperty("MS2.resolution"));
        } else {
            PropertyConfig.getInstance().setProperty("MS2.resolution", Integer.toString(resolution));
        }
    }//GEN-LAST:event_txtMS2ResolutionActionPerformed

    private void txtMaxMissCleabageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxMissCleabageActionPerformed
        int mCleavage = 0;
        boolean error = false;
        try {
            mCleavage = Integer.parseInt(txtMaxMissCleabage.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("max_miscleavages", Integer.toString(mCleavage));
        } else {
            txtMaxMissCleabage.setText(PropertyConfig.getInstance().getProperty("max_miscleavages"));
        }

    }//GEN-LAST:event_txtMaxMissCleabageActionPerformed

    private void cmbEnzymeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbEnzymeActionPerformed
        String enzyme = cmbEnzyme.getSelectedItem().toString();
        PropertyConfig.getInstance().setProperty("enzyme", enzyme);
    }//GEN-LAST:event_cmbEnzymeActionPerformed

    private void txtMassWindowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMassWindowActionPerformed
        int windowMass = 0;
        boolean error = false;
        try {
            windowMass = Integer.parseInt(txtMassWindow.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("mass.window", Integer.toString(windowMass) );
        } else {
            txtMassWindow.setText(PropertyConfig.getInstance().getProperty("mass.window"));
        }
    }//GEN-LAST:event_txtMassWindowActionPerformed

    private void txtMinFilteredPeaksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinFilteredPeaksActionPerformed
        int minfilteredPeaks = 0;
        boolean error = false;
        try {
            minfilteredPeaks = Integer.parseInt(txtMinFilteredPeaks.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("minimumFiltedPeaksNumberForEachWindow", Integer.toString(minfilteredPeaks) );
        } else {
            txtMinFilteredPeaks.setText(PropertyConfig.getInstance().getProperty("minimumFiltedPeaksNumberForEachWindow"));
        }
    }//GEN-LAST:event_txtMinFilteredPeaksActionPerformed

    private void txtMaxFilteredPeaksActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxFilteredPeaksActionPerformed
        int maxfilteredPeaks = 0;
        boolean error = false;
        try {
            maxfilteredPeaks = Integer.parseInt(txtMaxFilteredPeaks.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("maximumFiltedPeaksNumberForEachWindow", Integer.toString(maxfilteredPeaks) );
        } else {
            txtMaxFilteredPeaks.setText(PropertyConfig.getInstance().getProperty("maximumFiltedPeaksNumberForEachWindow"));
        }
    }//GEN-LAST:event_txtMaxFilteredPeaksActionPerformed

    private void txtMinPrecMassIsotopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinPrecMassIsotopActionPerformed
        int minIsotop = 0;
        boolean error = false;
        try {
            minIsotop = Integer.parseInt(txtMinPrecMassIsotop.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("minPrecMassIsotopicPeakSelected", Integer.toString(minIsotop));
        } else {
            txtMinPrecMassIsotop.setText(PropertyConfig.getInstance().getProperty("minPrecMassIsotopicPeakSelected"));
        }
    }//GEN-LAST:event_txtMinPrecMassIsotopActionPerformed

    private void txtDeisotopicPrecisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeisotopicPrecisionActionPerformed
        int deIsotopPrec = 0;
        boolean error = false;
        try {
            deIsotopPrec = Integer.parseInt(txtDeisotopicPrecision.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("deisotopePrecision", Integer.toString(deIsotopPrec));
        } else {
            txtDeisotopicPrecision.setText(PropertyConfig.getInstance().getProperty("deisotopePrecision"));
        }
    }//GEN-LAST:event_txtDeisotopicPrecisionActionPerformed

    private void txtDeconvulatePrecisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDeconvulatePrecisionActionPerformed
        int deConvPrecision = 0;
        boolean error = false;
        try {
            deConvPrecision = Integer.parseInt(txtDeconvulatePrecision.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("deconvulatePrecision", Integer.toString(deConvPrecision));
        } else {
            txtDeconvulatePrecision.setText(PropertyConfig.getInstance().getProperty("deconvulatePrecision"));
        }
    }//GEN-LAST:event_txtDeconvulatePrecisionActionPerformed

    private void txtFragBinSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFragBinSizeActionPerformed
        double fragBinSize = 0;
        boolean error = false;
        try {
            fragBinSize = Double.parseDouble(txtFragBinSize.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("fragment.binsize", Double.toString(fragBinSize));
        } else {
            txtFragBinSize.setText(PropertyConfig.getInstance().getProperty("fragment.binsize"));
        }
    }//GEN-LAST:event_txtFragBinSizeActionPerformed

    private void cmbNeutralLossActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNeutralLossActionPerformed
        int neutralLoss=cmbNeutralLoss.getSelectedIndex();
        PropertyConfig.getInstance().setProperty("neutral.losses", Integer.toString(neutralLoss));
    }//GEN-LAST:event_cmbNeutralLossActionPerformed

    private void txtPrecToleranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecToleranceActionPerformed
        double precTolerance = 0;
        boolean error = false;
        try {
            precTolerance = Double.parseDouble(txtPrecTolerance.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("precursor.tolerance", Double.toString(precTolerance));
        } else {
            txtPrecTolerance.setText(PropertyConfig.getInstance().getProperty("precursor.tolerance"));
        }
    }//GEN-LAST:event_txtPrecToleranceActionPerformed

    private void txtFragToleranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFragToleranceActionPerformed
        double fragTolerance = 0;
        boolean error = false;
        try {
            fragTolerance = Double.parseDouble(txtFragTolerance.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("fragment.tolerance", Double.toString(fragTolerance));
        } else {
            txtFragTolerance.setText(PropertyConfig.getInstance().getProperty("fragment.tolerance"));
        }
    }//GEN-LAST:event_txtFragToleranceActionPerformed

    private void cmbPrecToleranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPrecToleranceActionPerformed
       String unit=cmbPrecTolerance.getSelectedItem().toString();
       PropertyConfig.getInstance().setProperty("precursor.toleranceUnit", unit);
    }//GEN-LAST:event_cmbPrecToleranceActionPerformed

    private void cmbFragToleranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFragToleranceActionPerformed
        String unit=cmbFragmentMode.getSelectedItem().toString();
       PropertyConfig.getInstance().setProperty("fragment.toleranceUnit", unit);
    }//GEN-LAST:event_cmbFragToleranceActionPerformed

    private void txtMaxPepMassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxPepMassActionPerformed
        int maxPepMass = 0;
        boolean error = false;
        try {
            maxPepMass = Integer.parseInt(txtMaxPepMass.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("max.peptide.mass", Integer.toString(maxPepMass));
        } else {
            txtMaxPepMass.setText(PropertyConfig.getInstance().getProperty("max.peptide.mass"));
        }
    }//GEN-LAST:event_txtMaxPepMassActionPerformed

    private void txtMinPepMassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinPepMassActionPerformed
       int minPepMass = 0;
        boolean error = false;
        try {
            minPepMass = Integer.parseInt(txtMinPepMass.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("min.peptide.mass", Integer.toString(minPepMass));
        } else {
            txtMinPepMass.setText(PropertyConfig.getInstance().getProperty("min.peptide.mass"));
        }
    }//GEN-LAST:event_txtMinPepMassActionPerformed

    private void chkFragIonAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFragIonAActionPerformed
        PropertyConfig.getInstance().setProperty("fragment.ionA", Boolean.toString(chkFragIonA.isSelected()) );
    }//GEN-LAST:event_chkFragIonAActionPerformed

    private void chkFragIonBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFragIonBActionPerformed
       PropertyConfig.getInstance().setProperty("fragment.ionB", Boolean.toString(chkFragIonB.isSelected()) );
    }//GEN-LAST:event_chkFragIonBActionPerformed

    private void chkFragIonCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFragIonCActionPerformed
        PropertyConfig.getInstance().setProperty("fragment.ionC", Boolean.toString(chkFragIonC.isSelected()));
    }//GEN-LAST:event_chkFragIonCActionPerformed

    private void chkFragIonXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFragIonXActionPerformed
       PropertyConfig.getInstance().setProperty("fragment.ionX", Boolean.toString(chkFragIonX.isSelected()));
    }//GEN-LAST:event_chkFragIonXActionPerformed

    private void chkFragIonYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFragIonYActionPerformed
        PropertyConfig.getInstance().setProperty("fragment.ionY", Boolean.toString(chkFragIonY.isSelected()));
    }//GEN-LAST:event_chkFragIonYActionPerformed

    private void chkFragIonZActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFragIonZActionPerformed
        PropertyConfig.getInstance().setProperty("fragment.ionZ", Boolean.toString(chkFragIonZ.isSelected()));
    }//GEN-LAST:event_chkFragIonZActionPerformed

    private void txtMaxPepLengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaxPepLengthActionPerformed
       int maxPepLen = 0;
        boolean error = false;
        try {
            maxPepLen = Integer.parseInt(txtMaxPepLength.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("maxLen.allowed", Integer.toString(maxPepLen));
        } else {
            txtMaxPepLength.setText(PropertyConfig.getInstance().getProperty("maxLen.allowed"));
        }
    }//GEN-LAST:event_txtMaxPepLengthActionPerformed

    private void txtMinPepLengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMinPepLengthActionPerformed
       int minPepLen = 0;
        boolean error = false;
        try {
            minPepLen = Integer.parseInt(txtMinPepLength.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("minLen.allowed", Integer.toString(minPepLen));
        } else {
            txtMinPepLength.setText(PropertyConfig.getInstance().getProperty("minLen.allowed"));
        }
    }//GEN-LAST:event_txtMinPepLengthActionPerformed

    private void chkMonoLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMonoLinkActionPerformed
         PropertyConfig.getInstance().setProperty("searchForAlsoMonoLink", Boolean.toString(chkMonoLink.isSelected()));
    }//GEN-LAST:event_chkMonoLinkActionPerformed

    private void chkIntraLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkIntraLinkActionPerformed
        boolean val=chkIntraLink.isSelected();
        if(val){
            PropertyConfig.getInstance().setProperty("crossLinkedProteinTypes", "Both" );
        }else{
            PropertyConfig.getInstance().setProperty("crossLinkedProteinTypes", "Inter" );
        }
        
    }//GEN-LAST:event_chkIntraLinkActionPerformed

    private void chkInterLinkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkInterLinkActionPerformed
         boolean val=chkInterLink.isSelected();
        if(val){
            PropertyConfig.getInstance().setProperty("crossLinkedProteinTypes", "Both" );
        }else{
            PropertyConfig.getInstance().setProperty("crossLinkedProteinTypes", "Intra" );
        }
    }//GEN-LAST:event_chkInterLinkActionPerformed

    private void chkSideReactionSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSideReactionSActionPerformed
       PropertyConfig.getInstance().setProperty("consider.sideReactionSerine", Boolean.toString(chkSideReactionS.isSelected()));
    }//GEN-LAST:event_chkSideReactionSActionPerformed

    private void chkSideReactionTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSideReactionTActionPerformed
        PropertyConfig.getInstance().setProperty("consider.sideReactionThreonine", Boolean.toString(chkSideReactionT.isSelected()));
    }//GEN-LAST:event_chkSideReactionTActionPerformed

    private void chkSideReactionYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSideReactionYActionPerformed
        PropertyConfig.getInstance().setProperty("consider.sideReactionTyrosine", Boolean.toString(chkSideReactionY.isSelected()));
    }//GEN-LAST:event_chkSideReactionYActionPerformed

    private void txtPercolatorVersionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPercolatorVersionActionPerformed
        PropertyConfig.getInstance().setProperty("percolator.version", txtPercolatorVersion.getText());
    }//GEN-LAST:event_txtPercolatorVersionActionPerformed

    private void txtFDRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFDRActionPerformed
        double fdr = 0;
        boolean error = false;
        try {
            fdr = Double.parseDouble(txtFDR.getText());
        } catch (Exception ex) {
            error = true;
            JOptionPane.showMessageDialog(this, ex);

        }
        if (!error) {
            PropertyConfig.getInstance().setProperty("fdr", Double.toString(fdr));
        } else {
            txtFDR.setText(PropertyConfig.getInstance().getProperty("fdr"));
        }
    }//GEN-LAST:event_txtFDRActionPerformed

    private void cmbisotopErrorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbisotopErrorActionPerformed
        PropertyConfig.getInstance().setProperty("isotope.error", Integer.toString(cmbisotopError.getSelectedIndex()));
    }//GEN-LAST:event_cmbisotopErrorActionPerformed

    private void chkTurboButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkTurboButtonActionPerformed
      int tb=0;
      if(chkTurboButton.isSelected()){
          tb=1;
      }
      
      PropertyConfig.getInstance().setProperty("turbo.button", Integer.toString(tb) );
    }//GEN-LAST:event_chkTurboButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDefaultSettings;
    private javax.swing.JButton btnDeleteFixedModification;
    private javax.swing.JButton btnDeleteVariableModification;
    private javax.swing.JButton btnSetFixedModification;
    private javax.swing.JButton btnSetVariableModification;
    public javax.swing.JCheckBox chkFragIonA;
    public javax.swing.JCheckBox chkFragIonB;
    public javax.swing.JCheckBox chkFragIonC;
    public javax.swing.JCheckBox chkFragIonX;
    public javax.swing.JCheckBox chkFragIonY;
    public javax.swing.JCheckBox chkFragIonZ;
    public javax.swing.JCheckBox chkInterLink;
    public javax.swing.JCheckBox chkIntraLink;
    public javax.swing.JCheckBox chkIsLabeled;
    public javax.swing.JCheckBox chkMS1Centroid;
    public javax.swing.JCheckBox chkMS2Centroid;
    public javax.swing.JCheckBox chkMonoLink;
    public javax.swing.JCheckBox chkPercolator;
    public javax.swing.JCheckBox chkSideReactionS;
    public javax.swing.JCheckBox chkSideReactionT;
    public javax.swing.JCheckBox chkSideReactionY;
    public javax.swing.JCheckBox chkTurboButton;
    public javax.swing.JComboBox<String> cmbEnzyme;
    public javax.swing.JComboBox<String> cmbFragTolerance;
    public javax.swing.JComboBox<String> cmbFragmentMode;
    public javax.swing.JComboBox<String> cmbInstrument;
    public javax.swing.JComboBox<String> cmbNeutralLoss;
    public javax.swing.JComboBox<String> cmbPrecTolerance;
    public javax.swing.JComboBox<String> cmbisotopError;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblDeconvulatePrecision;
    private javax.swing.JLabel lblDeisotopicPrecision;
    private javax.swing.JLabel lblEnrichment;
    private javax.swing.JLabel lblEnzyme;
    private javax.swing.JLabel lblFDR;
    public javax.swing.JLabel lblFragBinOSizeUnit;
    private javax.swing.JLabel lblFragBinOffset;
    private javax.swing.JLabel lblFragBinSize;
    private javax.swing.JLabel lblFragTolerance;
    private javax.swing.JLabel lblFragmentMode;
    private javax.swing.JLabel lblInstrument;
    private javax.swing.JLabel lblIsotopPeakOffset;
    private javax.swing.JLabel lblMS1Resolution;
    private javax.swing.JLabel lblMS2Resolution;
    private javax.swing.JLabel lblMassWindow;
    private javax.swing.JLabel lblMaxFilteredPeaks;
    private javax.swing.JLabel lblMaxPepLength;
    private javax.swing.JLabel lblMaxPepMass;
    private javax.swing.JLabel lblMinFilteredPeaks;
    private javax.swing.JLabel lblMinPepLength;
    private javax.swing.JLabel lblMinPepMass;
    private javax.swing.JLabel lblMinPrecMassIsotop;
    private javax.swing.JLabel lblNeutralLoss;
    private javax.swing.JLabel lblPercolatorVersion;
    private javax.swing.JLabel lblPrecTolerance;
    private javax.swing.JLabel lblmaxMissCleabage;
    private javax.swing.JLabel lblmaxpepmassUnit;
    private javax.swing.JLabel lblminpepmassUnit;
    private javax.swing.JPanel pnlAdvancedSettings;
    private javax.swing.JPanel pnlFixedModifications;
    private javax.swing.JPanel pnlInputDataDescription;
    private javax.swing.JPanel pnlLinkInformation;
    private javax.swing.JPanel pnlListOfModifications;
    private javax.swing.JPanel pnlPreprocessing;
    private javax.swing.JPanel pnlSearchParameters;
    private javax.swing.JPanel pnlVariableModifications;
    public javax.swing.JSlider sldrEnrichment;
    public javax.swing.JSlider sldrFragBinOffset;
    public javax.swing.JTextField txtDeconvulatePrecision;
    public javax.swing.JTextField txtDeisotopicPrecision;
    public javax.swing.JTextField txtEnrichment;
    public javax.swing.JTextField txtFDR;
    public javax.swing.JTextArea txtFixedModifications;
    public javax.swing.JTextField txtFragBinOffset;
    public javax.swing.JTextField txtFragBinSize;
    public javax.swing.JTextField txtFragTolerance;
    public javax.swing.JTextArea txtListofModifications;
    public javax.swing.JTextField txtMS1Resolution;
    public javax.swing.JTextField txtMS2Resolution;
    public javax.swing.JTextField txtMassWindow;
    public javax.swing.JTextField txtMaxFilteredPeaks;
    public javax.swing.JTextField txtMaxMissCleabage;
    public javax.swing.JTextField txtMaxPepLength;
    public javax.swing.JTextField txtMaxPepMass;
    public javax.swing.JTextField txtMinFilteredPeaks;
    public javax.swing.JTextField txtMinPepLength;
    public javax.swing.JTextField txtMinPepMass;
    public javax.swing.JTextField txtMinPrecMassIsotop;
    public javax.swing.JTextField txtPercolatorVersion;
    public javax.swing.JTextField txtPrecTolerance;
    public javax.swing.JTextArea txtVariableModifications;
    // End of variables declaration//GEN-END:variables
}
